REST API
========

REST
----

That's fine, it means it's easy to create client libraries for a lot of different languages. But it's clearly not enough to know how to use the API ...

URL Schema
++++++++++

Parameters:

* Date
* AccessKey
* Signature

Available resources
+++++++++++++++++++

The REST philosophy says that everything should be a resource. So here is the list of resources:

**Definition**

  A `zip file containing assets and a xml description file <http://wiki.stupeflix.com/doku.php?id=zippedmoviefiles>`_, or directly a xml file with assets referred by url.

**Profile**

  A video generated by the service, using a specific codec, resolution and container. Available profiles are listed in `Supported Formats <http://wiki.stupeflix.com/doku.php?id=supportedformats>`_.

**Status**

  A json object giving information on a set of objects (currently only profiles).

Basic WorkFlow
++++++++++++++

1. Create a new definition using a PUT on a definition resource url

2. Create a video profile using A POST with an profile creation directive XML file on a definition resource URL. The XML file must comply with the schema.

3. Get the status from the profile status resource url

4. Check its content

5. When the main status is "available", you can download the video. If the profile creation directive file specified some upload targets on Youtube, the video was already uploaded there, so this step is optional.

Signing requests
++++++++++++++++

Request signature is built using the same kind of schema as Amazon web services. Have a look at the provided client libraries for more information. (documentation coming soon)
